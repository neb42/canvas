{
    "componentChunkName": "component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js",
    "path": "/widgets/config",
    "result": {"data":{"mdx":{"id":"e4d36b4d-6a43-5c82-914f-9b2643e487f3","excerpt":"Widget config A widget's config defines how it is rendered to the screen.\nIf you are familiar with React the config can be thought of as a component's propsâ€¦","fields":{"slug":"/widgets/config/"},"frontmatter":{"title":"","description":null,"image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"widget-config\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#widget-config\",\n    \"aria-label\": \"widget config permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Widget config\"), mdx(\"p\", null, \"A widget's config defines how it is rendered to the screen.\\nIf you are familiar with React the config can be thought of as a component's props.\"), mdx(\"p\", null, \"For example, the built in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Text\"), \" widget has a config item called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"text\"), \". This is a string,\\nthat will render the value within a span tag.\"), mdx(\"p\", null, \"Config is defined with OpenAPI 3.0 meaning that each item can be one of:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"string\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"number (integer is treated as number)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"boolean\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"object\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"array\")), mdx(\"p\", null, \"There are several methods of entering values for a config item:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Static: Manually enter a value. This is a text field for string and number,\\na toggle for boolean, and a JSON editor for object and array. This is the default mode for\\nobject and array.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Form: This is only applicable for object and array items.\\nIt allows the you to enter each array item or object field as a static value.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Widget: If a widget on the page has an exposed property matching the type of the\\nconfig item it can be used as a value.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Variable: Variable's that match the type of the config item can be used as a value.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Iterable: If the widget is a child of an iterable widget, it can use the iterator\\nas it's value.\"))));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":1,"value":"Widget config"}]}},"pageContext":{"slug":"/widgets/config/","prev":{"label":"Introduction","link":"/widgets/introduction"},"next":{"label":"Layout","link":"/widgets/layout"},"repositoryEditUrl":"","repositoryProvider":""}},
    "staticQueryHashes": ["1954253342","2328931024","2501019404","973074209"]}